// <auto-generated />
using System;
using COVID.App.Persistencia;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace COVID.App.Persistencia.Migrations
{
    [DbContext(typeof(AppContext))]
    partial class AppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("COVID.App.Dominio.CursoEstudiante", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("Estudianteid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Estudianteid");

                    b.ToTable("CursoEstudiantes");
                });

            modelBuilder.Entity("COVID.App.Dominio.CursoProfesor", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("Profesorid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Profesorid");

                    b.ToTable("CursoProfesores");
                });

            modelBuilder.Entity("COVID.App.Dominio.CursoSalon", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("Salonid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Salonid");

                    b.ToTable("CursoSalones");
                });

            modelBuilder.Entity("COVID.App.Dominio.HistoriaClinica", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Sintoma")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("HistoriaClinicas");
                });

            modelBuilder.Entity("COVID.App.Dominio.Persona", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("edad")
                        .HasColumnType("int");

                    b.Property<int>("estado")
                        .HasColumnType("int");

                    b.Property<int?>("historiaclinicaid")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("historiaclinicaid");

                    b.ToTable("Personas");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Persona");
                });

            modelBuilder.Entity("COVID.App.Dominio.Salon", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("Sedeid")
                        .HasColumnType("int");

                    b.Property<int>("aforo")
                        .HasColumnType("int");

                    b.Property<int>("numerosalon")
                        .HasColumnType("int");

                    b.Property<string>("unidad")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("Sedeid");

                    b.ToTable("Salones");
                });

            modelBuilder.Entity("COVID.App.Dominio.Sede", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("cantidad_salones")
                        .HasColumnType("int");

                    b.Property<string>("nombre_sede")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Sedes");
                });

            modelBuilder.Entity("COVID.App.Dominio.Directivo", b =>
                {
                    b.HasBaseType("COVID.App.Dominio.Persona");

                    b.Property<string>("facultad")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Directivo");
                });

            modelBuilder.Entity("COVID.App.Dominio.Estudiante", b =>
                {
                    b.HasBaseType("COVID.App.Dominio.Persona");

                    b.Property<string>("carrera")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("semestre")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Estudiante");
                });

            modelBuilder.Entity("COVID.App.Dominio.Personal_Aseo", b =>
                {
                    b.HasBaseType("COVID.App.Dominio.Persona");

                    b.Property<int>("turno")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Personal_Aseo");
                });

            modelBuilder.Entity("COVID.App.Dominio.Profesor", b =>
                {
                    b.HasBaseType("COVID.App.Dominio.Persona");

                    b.Property<string>("asignatura")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("departamento")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Profesor");
                });

            modelBuilder.Entity("COVID.App.Dominio.CursoEstudiante", b =>
                {
                    b.HasOne("COVID.App.Dominio.Estudiante", null)
                        .WithMany("cursoestudiante")
                        .HasForeignKey("Estudianteid");
                });

            modelBuilder.Entity("COVID.App.Dominio.CursoProfesor", b =>
                {
                    b.HasOne("COVID.App.Dominio.Profesor", null)
                        .WithMany("cursoprofesor")
                        .HasForeignKey("Profesorid");
                });

            modelBuilder.Entity("COVID.App.Dominio.CursoSalon", b =>
                {
                    b.HasOne("COVID.App.Dominio.Salon", null)
                        .WithMany("cursosalon")
                        .HasForeignKey("Salonid");
                });

            modelBuilder.Entity("COVID.App.Dominio.Persona", b =>
                {
                    b.HasOne("COVID.App.Dominio.HistoriaClinica", "historiaclinica")
                        .WithMany()
                        .HasForeignKey("historiaclinicaid");

                    b.Navigation("historiaclinica");
                });

            modelBuilder.Entity("COVID.App.Dominio.Salon", b =>
                {
                    b.HasOne("COVID.App.Dominio.Sede", null)
                        .WithMany("salones")
                        .HasForeignKey("Sedeid");
                });

            modelBuilder.Entity("COVID.App.Dominio.Salon", b =>
                {
                    b.Navigation("cursosalon");
                });

            modelBuilder.Entity("COVID.App.Dominio.Sede", b =>
                {
                    b.Navigation("salones");
                });

            modelBuilder.Entity("COVID.App.Dominio.Estudiante", b =>
                {
                    b.Navigation("cursoestudiante");
                });

            modelBuilder.Entity("COVID.App.Dominio.Profesor", b =>
                {
                    b.Navigation("cursoprofesor");
                });
#pragma warning restore 612, 618
        }
    }
}
